# action.yml
name: 'Helm Validation Service'
description: 'Performs helm lint and template validation on specified charts'

inputs:
  chart-path:
    description: 'Path to the Helm chart'
    required: true
  values-file:
    description: 'Path to values file (optional)'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.9.0'
      
    - name: Helm Lint
      shell: bash
      id: lint
      run: |
        echo "=== Starting Helm Chart Validation ==="
        echo "Validating chart at: ${{ inputs.chart-path }}"
        
        # Perform lint with detailed output
        if [ -n "${{ inputs.values-file }}" ]; then
          lint_output=$(helm lint ${{ inputs.chart-path }} -f ${{ inputs.values-file }})
        else
          lint_output=$(helm lint ${{ inputs.chart-path }})
        fi
        
        # Save lint output for PR comment
        echo "lint_output<<EOF" >> $GITHUB_OUTPUT
        echo "$lint_output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "=== Basic Validation Completed ==="

    - name: Generate Template Output for Changed Files
      if: github.event_name == 'pull_request'
      shell: bash
      id: template
      run: |
        # Fetch necessary git history
        git fetch origin ${{ github.base_ref }}
        
        # Get only yaml files that changed in templates directory
        changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep 'templates/.*\.yaml$' || true)
        
        if [ -n "$changed_files" ]; then
          echo "Changed template files detected:"
          echo "$changed_files"
          
          # Initialize template output with validation context
          TEMPLATE_OUTPUT="## Validation Summary\n"
          TEMPLATE_OUTPUT+="The following templates were modified in this PR:\n\n"
          
          # Generate complete template once
          if [ -n "${{ inputs.values-file }}" ]; then
            all_templates=$(helm template ${{ inputs.chart-path }} -f ${{ inputs.values-file }})
          else
            all_templates=$(helm template ${{ inputs.chart-path }})
          fi
          
          # Process each changed file
          for file in $changed_files; do
            filename=$(basename "$file")
            echo "Processing changes in: $filename"
            
            TEMPLATE_OUTPUT+="\n### üìÑ Changed File: \`$file\`\n"
            TEMPLATE_OUTPUT+="Below is the rendered template after your changes:\n\n"
            
            # Extract only the relevant template section for this file
            file_template=$(echo "$all_templates" | awk -v file="$filename" '
              /^# Source:.*'$filename'$/ {p=1; print; next}
              /^---*$/ {if(p) {print; p=0; next}}
              p {print}
            ')
            
            if [ -n "$file_template" ]; then
              TEMPLATE_OUTPUT+="$file_template\n\n"
              TEMPLATE_OUTPUT+="---\n"
            fi
          done
          
          # Save template output
          echo "template<<EOF" >> $GITHUB_OUTPUT
          echo -e "$TEMPLATE_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "No template files were changed in this PR."
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const output = `## üîç Helm Template Validation Results
          
          ### Validation Details
          - Chart Path: \`${{ inputs.chart-path }}\`
          - Values File: ${('${{ inputs.values-file }}' || 'Using default values')}
          
          ### Lint Results
          <details><summary>Show Helm Lint Output</summary>
          
          \`\`\`
          ${process.env.LINT_OUTPUT}
          \`\`\`
          
          </details>
          
          ${process.env.TEMPLATE && `
          ### Template Changes
          <details><summary>Show Changed Templates</summary>
          
          \`\`\`yaml
          ${process.env.TEMPLATE}
          \`\`\`
          
          </details>
          `}
          
          > Note: This validation shows only the templates that were modified in this PR.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
      env:
        TEMPLATE: ${{ steps.template.outputs.template }}
        LINT_OUTPUT: ${{ steps.lint.outputs.lint_output }}