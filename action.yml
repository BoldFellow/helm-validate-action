# action.yml
name: 'Helm Validation Service'
description: 'Performs helm lint and template validation on specified charts'

inputs:
  chart-path:
    description: 'Path to the Helm chart'
    required: true
  values-file:
    description: 'Path to values file (optional)'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.9.0'
      
    - name: Helm Lint
      shell: bash
      run: |
        echo "=== Starting Helm Chart Validation ==="
        if [ -n "${{ inputs.values-file }}" ]; then
          helm lint ${{ inputs.chart-path }} -f ${{ inputs.values-file }}
        else
          helm lint ${{ inputs.chart-path }}
        fi
        echo "=== Validation Completed ==="

    # Generate and capture template output for changed files
    - name: Generate Template for Changed Files
      if: github.event_name == 'pull_request'
      shell: bash
      id: template
      run: |
        git fetch origin ${{ github.base_ref }}
        changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep 'templates/.*\.yaml$' || true)
        
        if [ -n "$changed_files" ]; then
          # Generate complete template once for efficiency
          all_templates=$(helm template ${{ inputs.chart-path }} ${{ inputs.values-file != '' && '-f ' || '' }}${{ inputs.values-file }})
          
          # Create formatted output for each changed file
          TEMPLATE_OUTPUT="### Modified Templates:\n\n"
          for file in $changed_files; do
            TEMPLATE_OUTPUT+="ðŸ“„ Modified File: $file\n\n"
            file_template=$(echo "$all_templates" | awk -v file="$(basename $file)" '
              /^# Source:.*'$file'$/ {p=1; print; next}
              /^---*$/ {if(p) {print; p=0; next}}
              p {print}
            ')
            [ -n "$file_template" ] && TEMPLATE_OUTPUT+="$file_template\n\n---\n\n"
          done
          
          echo "template<<EOF" >> $GITHUB_OUTPUT
          echo -e "$TEMPLATE_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    # Comment the template output on the PR
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const templateOutput = process.env.TEMPLATE;
          
          if (templateOutput) {
            const output = `## Helm Template Results
            
            <details><summary>Show Modified Templates</summary>
            
            \`\`\`yaml
            ${templateOutput}
            \`\`\`
            
            </details>`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
          }
      env:
        TEMPLATE: ${{ steps.template.outputs.template }}